检查分类,检查子分类,检查项,检查内容,质量级别,处理方式,处理结果
4.1 需求设计与检查,4.1.1 需求变更影响,4.1.1.1 变更应该遵守职责单一原则，避免大范围的修改,每次提交只做一件事；单个类/方法不承担多个职责；变更只影响一小块功能，影响面可控,Critical,Sonar/AI/人工,
4.1 需求设计与检查,4.1.1 需求变更影响,4.1.1.2 变更修改应该向后兼容，不破坏现有功能,不删除或重构对外接口；不移除或更改已有字段、类、接口；不更改默认行为,Critical,Sonar/回归测试/API比对工具,
4.1 需求设计与检查,4.1.1 需求变更影响,4.1.1.3 变更应该有完善的回滚和灰度机制,有功能开关控制新功能；有数据库变更的回滚脚本；支持灰度发布和快速回滚,Critical,配置文件检查/脚本检查,
4.1 需求设计与检查,4.1.2 设计与需求匹配检查,4.1.2.1 设计方案应该是需求匹配、成本、可行性的最佳平衡,设计满足需求；成本可控；技术可行；满足非功能性需求,Critical,方案评审/人工,
4.1 需求设计与检查,4.1.2 设计与需求匹配检查,4.1.2.2 代码变更应该与需求声明一致,代码实现与需求规格一致；无需求蔓延；需求可追溯,Critical,需求追踪/代码审查,
4.1 需求设计与检查,4.1.2 设计与需求匹配检查,4.1.2.3 架构设计一致性检查,确保代码实现遵循预定义的分层架构；验证设计模式的正确应用；接口设计与架构文档一致,Critical,架构合规性检查/依赖关系分析,
4.1 需求设计与检查,4.1.2 设计与需求匹配检查,4.1.2.4 非功能性需求实现检查,验证性能需求的实现；检查安全需求的实现；确保可维护性需求的实现,Critical,性能测试/安全代码审查/代码复杂度分析,
4.1 需求设计与检查,4.1.3 文档完整性检查,4.1.3.1 API文档与代码实现保持一致,API接口文档完整；与代码实现一致；包含必要参数说明,Major,文档审查/自动化工具,
4.1 需求设计与检查,4.1.3 文档完整性检查,4.1.3.2 代码注释完整性检查,所有公共类和方法都有JavaDoc注释；复杂逻辑有详细的解释注释；TODO和FIXME标记有明确的任务描述,Major,JavaDoc检查工具/代码审查,
4.1 需求设计与检查,4.1.3 文档完整性检查,4.1.3.3 变更文档完整性检查,每次代码变更都有详细的变更日志记录；版本发布有完整的版本说明文档；重大变更提供详细的迁移指南,Major,Git提交信息检查/文档完整性验证,
4.1 需求设计与检查,4.1.4 逻辑完整性检查,4.1.4.1 业务逻辑分支覆盖完整,业务逻辑分支完整；处理所有可能的情况；有默认处理逻辑,Critical,代码审查/单元测试,
4.1 需求设计与检查,4.1.4 逻辑完整性检查,4.1.4.2 边界条件处理检查,所有输入参数的边界值都被正确处理；数组、集合等数据结构的边界访问安全；数值计算中的边界情况处理,Critical,边界值测试/静态代码分析,
4.1 需求设计与检查,4.1.4 逻辑完整性检查,4.1.4.3 异常处理完整性检查,所有可能的异常都被适当处理；异常处理策略的选择合适；所有资源都正确关闭，避免泄漏,Critical,静态代码分析/资源泄漏检测,
4.1 需求设计与检查,4.1.4 逻辑完整性检查,4.1.4.4 并发安全性检查,共享资源的线程安全访问；防止业务逻辑中的竞态条件；分布式环境下的并发控制,Critical,并发测试工具/静态代码分析,
4.1 需求设计与检查,4.1.4 逻辑完整性检查,4.1.4.5 事务一致性检查,事务边界正确定义；事务隔离级别设置合理；确保事务回滚机制正确实现,Critical,事务边界分析/数据库事务日志分析,
4.2 代码结构与组织检查,4.2.1 代码规范检查,4.2.1.1 注释完整性检查,类、方法有完整注释；复杂逻辑有解释性注释；注释与代码保持一致,Major,Sonar/代码审查,
4.2 代码结构与组织检查,4.2.1 代码规范检查,4.2.1.2 代码分层结构检查,遵循分层架构；层间依赖正确；避免跨层调用,Major,架构检查工具/代码审查,
4.2 代码结构与组织检查,4.2.1 代码规范检查,4.2.1.3 硬编码检查,避免硬编码常量；敏感信息配置化；国际化文本外部化,Major,静态代码分析/Sonar,
4.2 代码结构与组织检查,4.2.1 代码规范检查,4.2.1.4 代码格式化工具检查,使用统一的代码格式化工具；代码风格一致；符合团队编码规范,Major,格式化工具/代码风格检查,
4.2 代码结构与组织检查,4.2.2 模块化与依赖管理检查,4.2.2.1 代码模块和类的划分检查,模块职责单一；避免过大类和方法；功能内聚合理,Critical,复杂度分析/代码审查,
4.2 代码结构与组织检查,4.2.2 模块化与依赖管理检查,4.2.2.2 接口和抽象类使用检查,合理使用接口和抽象类；遵循面向接口编程；依赖倒置原则,Critical,代码审查/架构分析,
4.2 代码结构与组织检查,4.2.2 模块化与依赖管理检查,4.2.2.3 第三方组件管理检查,第三方依赖版本管理；避免依赖冲突；安全漏洞检查,Critical,依赖分析工具/安全扫描,
4.2 代码结构与组织检查,4.2.3 架构设计检查,4.2.3.1 设计模式恰当性检查,设计模式使用恰当；避免过度设计；模式实现正确,Major,代码审查/架构评审,
4.2 代码结构与组织检查,4.2.4 默认配置安全检查,4.2.4.1 默认账户和密码安全检查,避免默认账户；密码强度检查；避免硬编码凭证,Critical,安全扫描/配置审查,
4.2 代码结构与组织检查,4.2.4 默认配置安全检查,4.2.4.2 安全功能默认启用检查,安全功能默认开启；敏感操作默认需授权；默认最小权限原则,Critical,配置审查/安全测试,
4.2 代码结构与组织检查,4.2.4 默认配置安全检查,4.2.4.3 敏感信息配置检查,敏感信息加密存储；避免明文配置；访问控制合理,Critical,配置审查/安全扫描,
4.3 线程安全与并发检查,4.3.1 线程池配置检查,4.3.1.1 线程池参数配置检查,线程池核心线程数、最大线程数、队列容量配置合理；避免线程资源耗尽,Critical,配置检查/压力测试,
4.3 线程安全与并发检查,4.3.1 线程池配置检查,4.3.1.2 线程池监控和管理检查,线程池状态监控；任务执行异常处理；线程池优雅关闭,Critical,监控审查/代码审查,
4.3 线程安全与并发检查,4.3.2 Spring并发问题检查,4.3.2.1 单例Bean线程安全检查,单例Bean中的共享变量线程安全；避免可变状态；正确使用同步机制,Critical,代码审查/静态分析,
4.3 线程安全与并发检查,4.3.2 Spring并发问题检查,4.3.2.2 异步方法使用检查,异步方法参数传递安全；异常处理完善；返回值处理正确,Critical,代码审查/并发测试,
4.3 线程安全与并发检查,4.3.3 并发控制检查,4.3.3.1 同步机制使用检查,同步机制使用正确；避免死锁；减少锁粒度,Critical,静态分析/代码审查,
4.4 数据处理检查,4.4.1 数据持久化与完整性检查,4.4.1.1 事务边界正确性检查,事务边界定义合理；事务隔离级别设置正确；包含必要的回滚机制,Critical,代码审查/静态分析,
4.4 数据处理检查,4.4.1 数据持久化与完整性检查,4.4.1.2 数据校验完整性检查,输入数据有完整验证；敏感字段有脱敏处理；防止SQL注入,Critical,代码审查/安全扫描,
4.4 数据处理检查,4.4.1 数据持久化与完整性检查,4.4.1.3 ORM映射检查,ORM映射配置正确；懒加载使用合理；级联操作设置合适,Major,代码审查/性能测试,
4.4 数据处理检查,4.4.2 SQL查询优化检查,4.4.2.1 索引使用合理性检查,查询条件有索引覆盖；避免索引失效；复合索引顺序合理,Critical,执行计划分析/性能测试,
4.4 数据处理检查,4.4.2 SQL查询优化检查,4.4.2.2 大数据量查询优化检查,分页查询实现正确；大结果集处理优化；长事务拆分,Critical,性能测试/代码审查,
4.4 数据处理检查,4.4.2 SQL查询优化检查,4.4.2.3 N+1查询问题检查,避免循环中查询；使用JOIN优化；批量获取数据,Critical,性能测试/代码审查,
4.5 状态管理检查,4.5.1 状态一致性检查,4.5.1.1 状态转换完整性检查,状态定义完整；状态转换规则明确；处理异常状态转换,Critical,代码审查/单元测试,
4.5 状态管理检查,4.5.1 状态一致性检查,4.5.1.2 状态一致性保证,分布式状态一致性；并发状态冲突处理；状态回滚机制,Critical,并发测试/代码审查,
4.5 状态管理检查,4.5.1 状态一致性检查,4.5.1.3 状态持久化检查,状态持久化正确；状态恢复机制完善；异常状态处理,Critical,代码审查/故障测试,
4.6 业务正确性检查,4.6.1 输入参数验证检查,4.6.1.1 必填参数验证检查,必填参数非空检查；参数格式验证；业务规则验证,Critical,代码审查/单元测试,
4.6 业务正确性检查,4.6.1 输入参数验证检查,4.6.1.2 参数格式验证检查,字符串格式检查；数值范围检查；日期格式检查,Critical,静态分析/单元测试,
4.6 业务正确性检查,4.6.1 输入参数验证检查,4.6.1.3 业务规则验证检查,复杂业务规则验证；跨字段依赖验证；状态相关验证,Critical,代码审查/单元测试,
4.6 业务正确性检查,4.6.2 业务逻辑规则检查,4.6.2.1 计算逻辑正确性检查,金额计算准确性；计算公式实现正确；舍入规则符合要求,Critical,单元测试/代码审查,
4.6 业务正确性检查,4.6.2 业务逻辑规则检查,4.6.2.2 业务流程完整性检查,业务流程步骤完整；状态转换正确；异常流程处理,Critical,流程测试/代码审查,
4.6 业务正确性检查,4.6.2 业务逻辑规则检查,4.6.2.3 权限控制正确性检查,权限检查实现正确；权限层级合理；敏感操作授权验证,Critical,安全测试/代码审查,
4.6 业务正确性检查,4.6.3 数据一致性检查,4.6.3.1 多表数据一致性检查,关联表数据一致；事务边界合理；并发更新处理,Critical,事务测试/代码审查,
4.6 业务正确性检查,4.6.3 数据一致性检查,4.6.3.2 分布式数据一致性检查,分布式事务处理；最终一致性保证；补偿机制完善,Critical,分布式测试/代码审查,
4.6 业务正确性检查,4.6.3 数据一致性检查,4.6.3.3 缓存与数据库一致性检查,缓存更新策略合理；失效机制完善；异常情况处理,Critical,缓存测试/代码审查,
4.7 资源管理检查,4.7.1 内存资源管理检查,4.7.1.1 内存泄漏检查,避免无限制的缓存和集合增长；防止静态集合持有对象引用；及时清理事件监听器；避免ThreadLocal使用后不清理,Critical,静态分析/内存分析/压力测试,
4.7 资源管理检查,4.7.1 内存资源管理检查,4.7.1.2 对象创建优化检查,避免在循环中创建大量临时对象；合理使用对象池和复用机制；避免不必要的装箱拆箱操作,Major,性能分析/代码审查,
4.7 资源管理检查,4.7.2 文件资源管理检查,4.7.2.1 文件句柄关闭检查,确保文件句柄正确关闭；使用try-with-resources；避免资源泄漏,Critical,静态代码分析/代码审查,
4.7 资源管理检查,4.7.2 文件资源管理检查,4.7.2.2 临时文件管理检查,临时文件及时清理；合理使用临时目录；防止安全问题,Major,代码审查/安全扫描,
4.7 资源管理检查,4.7.3 网络资源管理检查,4.7.3.1 网络连接管理检查,网络连接及时关闭；连接超时设置合理；连接池参数配置合适,Critical,代码审查/负载测试,
4.7 资源管理检查,4.7.3 网络资源管理检查,4.7.3.2 HTTP客户端配置检查,HTTP客户端参数配置合理；连接复用；超时设置合适,Major,配置审查/负载测试,
4.7 资源管理检查,4.7.4 Redis资源管理检查,4.7.4.1.1 Redis连接池参数配置,最大连接数设置合理；最大空闲连接设置合理；连接超时设置合理；有连接池监控和健康检查,Major,配置文件审查/性能测试,
4.7 资源管理检查,4.7.4 Redis资源管理检查,4.7.4.2.1 键值过期设置,所有key设置合理过期时间；根据业务需求区分过期策略；有防止缓存穿透机制,Major,代码审查/运行时检查,
4.7 资源管理检查,4.7.4 Redis资源管理检查,4.7.4.3.1 避免危险命令,避免使用高风险命令；限制Redis命令执行权限；生产环境禁用危险命令,Major,代码审查/配置审查,
4.7 资源管理检查,4.7.4 Redis资源管理检查,4.7.4.4.1 批量操作优化,大批量操作使用pipeline或批量命令；避免循环中单个执行Redis命令；合理使用事务,Major,代码审查/性能测试,
4.8 异常处理与日志检查,4.8.1 异常处理规范,4.8.1.1 异常定义和分类检查,异常分类合理；自定义异常继承体系清晰；异常命名规范,Critical,代码审查/静态分析,
4.8 异常处理与日志检查,4.8.1 异常处理规范,4.8.1.2 异常处理策略检查,异常处理策略明确；区分业务异常和系统异常；避免吞异常,Critical,代码审查/静态分析,
4.8 异常处理与日志检查,4.8.1 异常处理规范,4.8.1.3 异常信息安全检查,异常不泄露敏感信息；生产环境异常处理安全；日志记录安全,Critical,安全审查/代码审查,
4.8 异常处理与日志检查,4.8.2 异常捕获与处理,4.8.2.1 try-catch使用检查,try-catch粒度合适；避免大范围捕获；针对不同异常分别处理,Major,代码审查/静态分析,
4.8 异常处理与日志检查,4.8.2 异常捕获与处理,4.8.2.2 异常链保持检查,保持异常原因链；传递原始异常信息；避免异常信息丢失,Major,代码审查/静态分析,
4.8 异常处理与日志检查,4.8.2 异常捕获与处理,4.8.2.3 资源清理检查,资源在finally块中释放；使用try-with-resources；确保资源正确关闭,Major,静态分析/代码审查,
4.8 异常处理与日志检查,4.8.3 异常传播与转换,4.8.3.1 异常转换规范检查,异常转换策略合理；异常转换保留原因；层间异常处理清晰,Major,代码审查/架构评审,
4.8 异常处理与日志检查,4.8.3 异常传播与转换,4.8.3.2 边界异常处理检查,外部接口边界异常处理；远程调用异常处理；超时和重试策略,Major,代码审查/集成测试,
4.8 异常处理与日志检查,4.8.3 异常传播与转换,4.8.3.3 全局异常处理检查,全局异常处理器配置；统一异常处理策略；错误码和消息标准化,Major,代码审查/集成测试,
4.9 日志与监控检查,4.9.1 日志规范,4.9.1.1 日志框架配置检查,日志框架配置合理；日志级别设置合适；日志输出格式标准化,Critical,配置审查/日志分析,
4.9 日志与监控检查,4.9.1 日志规范,4.9.1.2 日志内容规范检查,日志内容完整；包含必要上下文信息；敏感信息脱敏,Critical,代码审查/日志分析,
4.9 日志与监控检查,4.9.1 日志规范,4.9.1.3 日志级别使用检查,日志级别使用正确；关键操作有INFO日志；异常有ERROR日志,Critical,代码审查/日志分析,
4.9 日志与监控检查,4.9.2 监控指标设置,4.9.2.1 应用性能监控检查,关键业务指标监控；系统资源指标监控；异常情况告警,Major,监控配置审查/运行时分析,
4.9 日志与监控检查,4.9.3 性能监控检查,4.9.3.1 监控维度完整性检查,覆盖应用、中间件、数据库层面；关键调用链路监控；异常指标告警,Major,监控配置审查/运维评审,
4.10 安全检查,4.10.1 输入验证检查,4.10.1.1 SQL注入防护检查,使用参数化查询；避免拼接SQL；过滤特殊字符,Critical,安全扫描/代码审查,
4.10 安全检查,4.10.1 输入验证检查,4.10.1.2 XSS攻击防护检查,输出编码；使用安全框架；过滤不安全内容,Critical,安全扫描/代码审查,
4.10 安全检查,4.10.1 输入验证检查,4.10.1.3 输入参数验证检查,服务端验证完整；长度限制；格式检查,Major,代码审查/安全测试,
4.10 安全检查,4.10.2 认证授权检查,4.10.2.1 身份认证机制检查,认证机制安全可靠；密码有加密存储；有防暴力破解机制,Critical,安全审计/渗透测试,
4.10 安全检查,4.10.2 认证授权检查,4.10.2.2 权限控制检查,最小权限原则；权限粒度合适；敏感操作有授权验证,Critical,安全审计/代码审查,
4.10 安全检查,4.10.2 认证授权检查,4.10.2.3 密码安全存储检查,使用安全哈希算法；加盐处理；密码复杂度验证,Critical,安全审计/代码审查,
4.10 安全检查,4.10.3 密码学实践检查,4.10.3.1 加密算法选择检查,使用标准加密算法；密钥长度足够；避免过时算法,Critical,安全审计/代码审查,
4.10 安全检查,4.10.3 密码学实践检查,4.10.3.2 密钥管理检查,密钥安全存储；密钥定期轮换；密钥访问控制,Critical,安全审计/配置审查,
4.10 安全检查,4.10.3 密码学实践检查,4.10.3.3 随机数生成检查,使用安全随机数生成器；避免可预测随机数；会话ID随机性,Major,代码审查/安全测试,
4.10 安全检查,4.10.4 通信安全检查,4.10.4.1 HTTPS配置检查,强制使用HTTPS；TLS配置安全；证书管理合规,Critical,配置审查/安全扫描,
4.10 安全检查,4.10.4 通信安全检查,4.10.4.2 CSRF防护检查,使用CSRF令牌；验证请求来源；敏感操作二次验证,Critical,安全扫描/代码审查,
4.10 安全检查,4.10.4 通信安全检查,4.10.4.3 安全头部检查,设置安全相关HTTP头；内容安全策略；点击劫持防护,Major,配置审查/安全扫描,
4.11 性能优化检查,4.11.1 数据库性能检查,4.11.1.1 SQL查询优化检查,索引使用合理；避免全表扫描；避免复杂子查询,Critical,执行计划分析/性能测试,
4.11 性能优化检查,4.11.1 数据库性能检查,4.11.1.2 索引使用检查,索引设计合理；避免索引失效；考虑查询条件顺序,Critical,执行计划分析/性能测试,
4.11 性能优化检查,4.11.1 数据库性能检查,4.11.1.3 批量操作检查,使用批量插入/更新；避免循环单条操作；事务大小控制合理,Critical,代码审查/性能测试,
4.11 性能优化检查,4.11.1 数据库性能检查,4.11.1.4 分页查询检查,分页参数校验；结果集大小限制；高效分页实现,Critical,代码审查/性能测试,
4.11 性能优化检查,4.11.1 数据库性能检查,4.11.1.5 N+1查询检查,避免循环查询；使用JOIN或批量查询；预加载关联数据,Critical,代码审查/性能分析,
4.11 性能优化检查,4.11.2 缓存策略检查,4.11.2.1 缓存命中率检查,缓存策略合理；缓存粒度适中；热点数据缓存,Critical,性能监控/缓存分析,
4.11 性能优化检查,4.11.2 缓存策略检查,4.11.2.2 缓存穿透防护检查,空值缓存；布隆过滤器；请求合并,Critical,代码审查/压力测试,
4.11 性能优化检查,4.11.2 缓存策略检查,4.11.2.3 缓存击穿防护检查,互斥锁/分布式锁；热点数据预加载；过期时间随机化,Critical,代码审查/压力测试,
4.11 性能优化检查,4.11.2 缓存策略检查,4.11.2.4 缓存雪崩防护检查,过期时间错开；多级缓存；熔断降级机制,Critical,代码审查/架构评审,
4.11 性能优化检查,4.11.2 缓存策略检查,4.11.2.5 缓存一致性检查,更新策略合理；失效机制完善；读写锁控制,Critical,代码审查/一致性测试,
4.12 微服务架构检查,4.12.1 服务拆分检查,4.12.1.1 服务边界设计检查,服务边界清晰；单一职责；避免过度耦合,Critical,架构评审/设计审查,
4.12 微服务架构检查,4.12.1 服务拆分检查,4.12.1.2 数据库拆分检查,数据分区策略合理；跨库事务处理；数据一致性保证,Critical,架构评审/设计审查,
4.12 微服务架构检查,4.12.1 服务拆分检查,4.12.1.3 API设计检查,接口粒度合适；版本策略合理；向后兼容设计,Critical,API评审/契约测试,
4.12 微服务架构检查,4.12.2 服务通信检查,4.12.2.1 通信性能检查,通信方式选择合理；序列化效率；传输数据量控制,Critical,性能测试/代码审查,
4.12 微服务架构检查,4.12.2 服务通信检查,4.12.2.2 序列化优化检查,高效序列化协议；避免大对象序列化；字段精简,Critical,性能测试/代码审查,
4.12 微服务架构检查,4.12.2 服务通信检查,4.12.2.3 负载均衡检查,负载均衡策略合理；服务发现机制；故障转移配置,Critical,配置审查/压力测试,
4.12 微服务架构检查,4.12.3 分布式事务检查,4.12.3.1 事务模式检查,分布式事务模式选择合理；最终一致性保证；事务边界清晰,Critical,架构评审/代码审查,
4.12 微服务架构检查,4.12.3 分布式事务检查,4.12.3.2 幂等性检查,接口幂等设计；重试机制安全；唯一标识处理,Critical,代码审查/测试验证,
4.12 微服务架构检查,4.12.3 分布式事务检查,4.12.3.3 补偿机制检查,事务补偿机制完善；失败处理策略；状态恢复能力,Critical,代码审查/故障演练,
4.12 微服务架构检查,4.12.3 分布式事务检查,4.12.3.4 事务状态跟踪检查,事务状态记录完整；事务过程可追踪；异常情况可排查,Critical,代码审查/日志分析,
4.13 容错性检查,4.13.1 熔断降级检查,4.13.1.1 熔断器配置检查,熔断阈值设置合理；失败率计算方式；半开状态恢复策略,Critical,配置审查/故障注入测试,
4.13 容错性检查,4.13.1 熔断降级检查,4.13.1.2 降级策略检查,降级逻辑完善；降级响应设计；核心功能保护,Critical,代码审查/故障演练,
4.13 容错性检查,4.13.1 熔断降级检查,4.13.1.3 超时配置检查,超时时间设置合理；优雅超时处理；长任务拆分,Critical,配置审查/性能测试,
4.13 容错性检查,4.13.2 重试策略检查,4.13.2.1 重试参数检查,重试次数配置合理；重试间隔递增；避免重试风暴,Critical,配置审查/负载测试,
4.13 容错性检查,4.13.2 重试策略检查,4.13.2.2 重试安全性检查,幂等性保证；状态保存；避免级联故障,Critical,代码审查/故障注入测试,
4.13 容错性检查,4.13.3 限流保护检查,4.13.3.1 限流算法检查,限流算法选择合适；限流粒度合理；优先级策略,Critical,代码审查/压力测试,
4.13 容错性检查,4.13.3 限流保护检查,4.13.3.2 限流阈值配置检查,限流阈值设置合理；动态调整能力；突发流量处理,Critical,配置审查/压力测试,
4.13 容错性检查,4.13.3 限流保护检查,4.13.3.3 限流后处理检查,拒绝策略合理；友好提示；核心接口保护,Critical,代码审查/测试验证,
4.13 容错性检查,4.13.4 异常故障处理检查,4.13.4.1 故障隔离检查,线程池隔离；信号量隔离；故障范围控制,Critical,架构评审/故障演练,
4.13 容错性检查,4.13.4 异常故障处理检查,4.13.4.2 资源保护检查,系统资源监控；资源分配优先级；过载保护,Critical,配置审查/压力测试,
4.14 可扩展性检查,4.14.1 水平扩展检查,4.14.1.1 无状态服务设计检查,服务设计无状态；避免本地缓存；支持多实例部署,Critical,架构评审/代码审查,
4.14 可扩展性检查,4.14.1 水平扩展检查,4.14.1.2 负载均衡配置检查,负载均衡策略合理；会话保持配置；故障实例摘除,Critical,配置审查/负载测试,
4.14 可扩展性检查,4.14.1 水平扩展检查,4.14.1.3 分布式缓存检查,缓存一致性保证；集群配置合理；故障转移机制,Critical,配置审查/容错测试,
4.14 可扩展性检查,4.14.2 垂直扩展检查,4.14.2.1 资源利用率检查,CPU利用率优化；内存使用效率；IO性能优化,Critical,性能监控/代码审查,
4.14 可扩展性检查,4.14.2 垂直扩展检查,4.14.2.2 性能监控检查,关键指标监控；性能瓶颈分析；资源扩展预警,Critical,监控配置/性能分析,
4.14 可扩展性检查,4.14.3 异步设计检查,4.14.3.1 消息队列使用检查,消息可靠性保证；消费者扩展性；消息积压处理,Critical,架构评审/压力测试,
4.14 可扩展性检查,4.14.3 异步设计检查,4.14.3.2 异步处理模式检查,异步任务设计合理；任务状态跟踪；失败处理机制,Critical,代码审查/架构评审,
4.15 可维护性检查,4.15.1 代码可读性检查,4.15.1.1 命名规范检查,命名规范一致；见名知意；遵循项目规范,Major,代码审查/静态分析,
4.15 可维护性检查,4.15.1 代码可读性检查,4.15.1.2 代码复杂度检查,方法圈复杂度控制；嵌套层级限制；代码逻辑清晰,Major,复杂度分析/静态检查,
4.15 可维护性检查,4.15.1 代码可读性检查,4.15.1.3 注释覆盖率检查,类和方法注释完整；复杂逻辑有注释；注释与代码一致,Major,代码审查/静态分析,
4.15 可维护性检查,4.15.2 文档完整性检查,4.15.2.1 API文档检查,API文档完整；参数说明清晰；异常情况说明,Major,文档审查/自动化工具,
4.15 可维护性检查,4.15.2 文档完整性检查,4.15.2.2 项目文档检查,项目说明文档完整；环境配置文档；部署指南,Major,文档审查/人工检查,
4.15 可维护性检查,4.15.2 文档完整性检查,4.15.2.3 代码注释检查,代码注释覆盖关键逻辑；注释内容有价值；保持更新,Major,代码审查/静态分析,
4.15 可维护性检查,4.15.3 代码质量工具检查,4.15.3.1 静态代码分析工具,静态分析工具配置合理；严重问题及时修复；代码质量门禁,Major,CI配置审查/工具使用检查,
4.15 可维护性检查,4.15.3 代码质量工具检查,4.15.3.2 代码格式化工具,代码格式化工具统一；团队代码风格一致；自动格式化配置,Major,工具配置审查/代码审查,
4.16 可测试性检查,4.16.1 持续集成检查,4.16.1.1 构建脚本可重复性检查,构建过程可重复；环境隔离；依赖管理完善,Critical,构建环境检查/人工,
4.16 可测试性检查,4.16.1 持续集成检查,4.16.1.2 自动化测试覆盖率检查,单元测试覆盖率达标；核心逻辑有测试覆盖；测试及时更新,Critical,覆盖率工具/代码审查,
4.16 可测试性检查,4.16.1 持续集成检查,4.16.1.3 代码质量门禁检查,质量门禁配置合理；阻断严重问题；质量报告可查,Major,CI配置审查/人工,
4.16 可测试性检查,4.16.2 单元测试设计检查,4.16.2.1 测试用例设计检查,测试用例覆盖主要路径；包含边界条件；异常路径测试,Critical,代码审查/覆盖率分析,
4.16 可测试性检查,4.16.2 单元测试设计检查,4.16.2.2 测试依赖隔离检查,外部依赖模拟；数据库测试隔离；测试环境独立,Critical,代码审查/测试环境检查,
4.16 可测试性检查,4.16.3 可测试架构检查,4.16.3.1 接口设计可测试性检查,接口设计便于测试；职责单一；依赖可注入,Major,架构评审/代码审查,
4.16 可测试性检查,4.16.3 可测试架构检查,4.16.3.2 代码可测性设计检查,避免静态方法；依赖倒置原则；避免全局状态,Major,代码审查/架构评审,
4.17 测试相关检查,4.17.1 单元测试检查,4.17.1.1 测试方法命名规范检查,测试方法命名规范；表达测试意图；便于理解,Critical,代码审查/人工,
4.17 测试相关检查,4.17.1 单元测试检查,4.17.1.2 测试断言完整性检查,测试断言覆盖预期结果；检查异常情况；验证状态变化,Critical,代码审查/人工,
4.17 测试相关检查,4.17.1 单元测试检查,4.17.1.3 测试数据隔离检查,测试数据独立；避免测试间干扰；数据清理完整,Major,代码审查/测试执行分析,
4.17 测试相关检查,4.17.2 集成测试检查,4.17.2.1 接口测试完整性检查,接口测试覆盖全面；包含异常场景；验证响应格式,Critical,测试覆盖率/人工,
4.17 测试相关检查,4.17.2 集成测试检查,4.17.2.2 数据库事务测试检查,事务一致性测试；回滚测试；并发测试,Major,代码审查/测试执行分析,
4.17 测试相关检查,4.17.2 集成测试检查,4.17.2.3 外部依赖模拟检查,外部服务模拟；模拟响应合理；异常场景模拟,Major,代码审查/测试配置检查,
4.17 测试相关检查,4.17.3 测试覆盖率检查,4.17.3.1 代码覆盖率达标检查,代码覆盖率达到要求；核心模块覆盖率高；覆盖率趋势监控,Critical,覆盖率工具/CI检查,
4.17 测试相关检查,4.17.3 测试覆盖率检查,4.17.3.2 分支覆盖率检查,关键分支路径覆盖；条件覆盖率达标；复杂逻辑测试充分,Major,覆盖率工具/代码审查,
4.17 测试相关检查,4.17.3 测试覆盖率检查,4.17.3.3 异常路径测试检查,异常路径测试覆盖；错误处理验证；边界条件测试,Major,代码审查/测试执行分析,
4.18 影响分析检查,4.18.1 代码变更影响分析,4.18.1.1 变更范围评估检查,变更范围明确；影响面可控；有依赖分析,Critical,依赖分析/人工,
4.18 影响分析检查,4.18.1 代码变更影响分析,4.18.1.2 依赖关系影响检查,上下游依赖分析；间接依赖评估；接口契约变更影响,Critical,依赖分析工具/人工,
4.18 影响分析检查,4.18.1 代码变更影响分析,4.18.1.3 向后兼容性检查,API兼容性保证；数据兼容性；配置兼容性,Major,兼容性测试/代码审查,
4.18 影响分析检查,4.18.2 性能影响分析,4.18.2.1 性能回归检查,变更不引入性能退化；有性能基准比较；监控关键指标,Critical,性能测试/监控,
4.18 影响分析检查,4.18.2 性能影响分析,4.18.2.2 资源消耗影响检查,资源使用量评估；负载测试验证；峰值处理能力,Major,资源监控/负载测试,
4.18 影响分析检查,4.18.2 性能影响分析,4.18.2.3 并发性能影响检查,并发性能验证；线程资源影响；数据库连接池影响,Major,并发测试/性能分析,
4.18 影响分析检查,4.18.3 安全影响分析,4.18.3.1 安全漏洞引入检查,代码变更安全审查；第三方库漏洞检查；安全测试验证,Critical,安全扫描/漏洞分析,
4.18 影响分析检查,4.18.3 安全影响分析,4.18.3.2 权限变更影响检查,权限模型变更分析；授权逻辑变更审查；最小权限验证,Critical,安全审计/代码审查,
4.18 影响分析检查,4.18.3 安全影响分析,4.18.3.3 数据安全影响检查,敏感数据处理变更；加密解密流程变更；数据泄露风险评估,Major,安全审计/数据流分析, 